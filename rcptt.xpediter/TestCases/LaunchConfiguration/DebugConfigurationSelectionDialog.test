--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _eEaF4ER8EeamKrg04Gqe-Q,_ktRQQER8EeamKrg04Gqe-Q,_PprFMER9EeamKrg04Gqe-Q,_l8_BIER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q,_aEjwMLjIEeebSNbxTgM6gQ
Element-Name: DebugConfigurationSelectionDialog
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _HYStIHqcEea2J_ZTcwmemQ
Runtime-Version: 2.2.0.201706152316
Save-Time: 10/25/17 6:42 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Test was converted from swtbot

global [val jclDataset "XDEVREG.HS.JCLPARSE.TEST.JCL"]
global [val jclMember "CWXTPROC"]
global [val badBatchDDIO "BAD.BATCH.DDIO"]
global [val programName "PGMNM"]
global [val stepName "STEPNM"]
global [val jobName "JOBNM"]
global [val imsUserId "IMSUSRID"]
global [val imsTransactionCode "IMSTRANCD"]
global [val badImsDDIO "BAD.IMS.DDIO"]
global [val subSystem "SUBSYS"]
global [val storedProcedure "SUBSYS"]
global [val badDb2DDIO "BAD.DB2.DDIO"]

proc "create-launch-configurations" [val suffix ""]
{
	get-menu "Run/Debug Configurations..." | click
	with [get-window "Debug Configurations"] {
	    get-tree | select "Xpediter Batch Debug Session"
	    get-button "New launch configuration" | click
	    get-editbox -after [get-label "Name:"] | set-text [format "%s%s" "Batch" $suffix]
	    with [get-group "Job to debug" | get-editbox -after [get-label "Dataset(member):"]] {
	        set-text [format "%S(%S)" $jclDataset $jclMember]
	    }
	    with [get-group "Debug criteria"] {
	        with [get-editbox -after [get-label "Job name:"]] {
	            set-text $jobName
	        }
	        get-button "Add..." | click
	    }
	    with [get-window Add] {
	        get-editbox -after [get-label "Step:"] | set-text $stepName
	        with [get-editbox -after [get-label "Program:"]] {
	            set-text $programName
	        }
	        get-button OK | click
	    }
	    get-tab-folder | get-tab-item DDIO | click
	    get-group "DDIO (Compuware source listing files)" | get-button "Add..." | click
	    with [get-window Datasets] {
	        get-editbox | set-text $badBatchDDIO
	        get-button OK | click
	    }
	    get-button Apply | click
	}
	with [get-window "Debug Configurations"] {
	    get-tree | select "Xpediter IMS MPP Debug Session"
	    get-button "New launch configuration" | click
	    get-editbox -after [get-label "Name:"] | set-text [format "%s%s" "IMS" $suffix]
	    with [get-group "IMS MPP JCL location" | get-editbox -after [get-label "Dataset(member):"]] {
	        set-text [format "%S(%S)" $jclDataset $jclMember]
	    }
	    with [get-group "Debug criteria"] {
	        with [get-editbox -after [get-label "Job name:"]] {
	            set-text $jobName
	            key-type "TRAVERSE_TAB_NEXT"
	        }
	        get-editbox -after [get-label "Step name:"] | set-text $stepName
	        get-editbox -after [get-label "IMS user ID:"] | set-text $imsUserId
	        get-button "Add..." | click
	    }
	    with [get-window Add] {
	        with [get-editbox -after [get-label "Transaction:"]] {
	            set-text $imsTransactionCode
	        }
	        get-editbox -after [get-label "Program:"] | set-text PGMNM
	        with [get-editbox -after [get-label "Transaction:"]] {
	            set-text $programName
	        }
	        get-button OK | click
	    }
	    get-group "Debug criteria" | get-button "Add..." | key-type "" "\\u0000"
	    get-tab-folder | get-tab-item DDIO | click
	    get-group "DDIO (Compuware source listing files)" | get-button "Add..." | click
	    with [get-window Datasets] {
	        get-editbox | set-text $badImsDDIO
	        get-button OK | click
	    }
	    get-button Apply | click
	}
	with [get-window "Debug Configurations"] {
	    get-tree | select "Xpediter DB2 SP Debug Session"
	    get-button "New launch configuration" | click
	    get-editbox -after [get-label "Name:"] | set-text [format "%s%s" "DB2" $suffix]
	    with [get-group "Application environment (WLM JCL)"] {
	        get-editbox -after [get-label "Dataset(member):"] | set-text [format "%S(%S)" $jclDataset $jclMember]
	        with [get-editbox -after [get-label "Job name:"]] {
	            set-text $jobName
	            key-type "TRAVERSE_TAB_NEXT"
	        }
	        get-editbox -after [get-label "Step name:"] | set-text $stepName
	    }
	    with [get-group "DB2 stored procedure filter criteria"] {
	        get-editbox -after [get-label "Program name:"] | set-text $programName
	        get-editbox -after [get-label "DB2 subsystem name:"] | set-text $subSystem
	        get-editbox -after [get-label "Stored procedure name:"] | set-text $storedProcedure
	        get-editbox -after [get-label "Client End User ID/PC Account Code/IP Address:"] | set-text $imsUserId
	    }
	    get-tab-folder | get-tab-item DDIO | click
	    get-group "DDIO (Compuware source listing files)" | get-button "Add..." | click
	    with [get-window Datasets] {
	        get-editbox | set-text $badDb2DDIO
	        get-button OK | click
	    }
	    get-button Apply | click
	    get-tab-folder | get-tab-item Target | click
	    get-group "DB2 stored procedure filter criteria" | get-editbox 
	        -after [get-label "Client End User ID/PC Account Code/IP Address:"] | set-text IMSUSRID
	}
	get-window "Debug Configurations" | get-button Close | click
}

add-filter -hostName $HOST -portNum $PORT -filter $FILTER_XDEVREG

get-view $HOST_EXPLORER | get-tree 
    | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $jclDataset -member $jclMember]
    | get-menu "Debug As/Xpediter Batch Debug Session..." | click
get-window "Debug Configurations" | get-button Close | get-property enablement | equals true | verify-true
get-window "Debug Configurations" | get-button Close | click

// Tests exiting out of the launch configuration choice dialog using the escape button
// See SWTBOT method testEscape()

get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
get-window "Select Debug Configuration" | get-button "Use an existing configuration" | key-type "TRAVERSE_ESCAPE"

get-view $HOST_EXPLORER | get-tree 
    | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $jclDataset -member $jclMember]
    | get-menu "Debug As/Xpediter Batch Debug Session..." | click

with [get-window "Select Debug Configuration"] {
    get-button "Create a new configuration" | click
    get-button Open | click
}
get-window "Debug Configurations" | get-button Close | get-property enablement | equals true | verify-true
get-window "Debug Configurations" | get-button Close | click

delete-batch-debug-session [format "%s (1)" $jclMember]

// Test launch configuration selection dialog with only one launch config
// See SWTBOT method testButtonValidation_SingleLaunchConfig()

get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-button "Use an existing configuration" | get-property enablement | equals true | verify-true
    get-list | get-property "getItems().String[0]" | equals CWXTPROC | verify-true
    get-button Debug | get-property enablement | equals true | verify-true
    get-button Open | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-button "Create a new configuration" | click
with [get-window "Select Debug Configuration"] {
    get-button Debug | get-property enablement | equals false | verify-true
    get-button Open | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-button Cancel | click

delete-batch-debug-session $jclMember
delete-batch-debug-session [format "%s (1)" $jclMember]

create-launch-configurations

// Next section tests opening debug configurations where a single configuration exists for each type
// see SWTBot test method: testButtonPressed_OpenButtonForExistingConfigurationWithSingleLaunchConfig()

get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | get-property "getItems().String[0]" | equals Batch | verify-true
    get-button "Use an existing configuration" | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-button Cancel | click
get-menu "Run/Debug As/2 Xpediter DB2 SP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | get-property "getItems().String[0]" | equals DB2 | verify-true
    get-button "Use an existing configuration" | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-button Cancel | click
get-menu "Run/Debug As/3 Xpediter IMS MPP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | get-property "getItems().String[0]" | equals IMS | verify-true
    get-button "Use an existing configuration" | get-property enablement | equals true | verify-true
}

// Next section tests launching debug when there is only one launch config for each type - expect a DDIO error
// See SWTBOT method testButtonPressed_DebugButtonWithSingleLaunchConfig()

get-window "Select Debug Configuration" | get-button Cancel | click
get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
get-window "Select Debug Configuration" | get-button Debug | click

handle-login-dialog

wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.BATCH.DDIO" | get-property "columns[0]" | equals "BAD.BATCH.DDIO" | verify-true
        get-item "BAD.BATCH.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click
get-menu "Run/Debug As/2 Xpediter DB2 SP Debug Session..." | click
get-window "Select Debug Configuration" | get-button Debug | click

handle-login-dialog

wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.DB2.DDIO" | get-property "columns[0]" | equals "BAD.DB2.DDIO" | verify-true
        get-item "BAD.DB2.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click
get-menu "Run/Debug As/3 Xpediter IMS MPP Debug Session..." | click
get-window "Select Debug Configuration" | get-button Debug | click

handle-login-dialog

wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.IMS.DDIO" | get-property "columns[0]" | equals "BAD.IMS.DDIO" | verify-true
        get-item "BAD.IMS.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click

// Create a 2nd set of launch configurations
create-launch-configurations -suffix " - 2"

// Next section tests button/list enablement for multiple debug configurations.
// See SWTBOT method testButtonValidation_MultipleLaunchConfigs()

get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    with [get-list] {
        get-property "getItemCount()" | equals 2 | verify-true
        get-property "getSelectionIndices().length" | equals 0 | verify-true
    }
    get-button Debug | get-property enablement | equals false | verify-true
    get-button Open | get-property enablement | equals false | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
    get-list | get-property enablement | equals true | verify-true
    get-button "Use an existing configuration" | get-property enablement | equals true | verify-true
    with [get-button "Create a new configuration"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals false | verify-true
    }
    with [get-button "Use an existing configuration"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
}

get-window "Select Debug Configuration" | get-button "Create a new configuration" | click
with [get-window "Select Debug Configuration"] {
    get-button Debug | get-property enablement | equals false | verify-true
    get-button Open | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
    get-list | get-property enablement | equals false | verify-true
}
get-window "Select Debug Configuration" | get-button "Use an existing configuration" | click
with [get-window "Select Debug Configuration"] {
    get-button Debug | get-property enablement | equals false | verify-true
    get-button Open | get-property enablement | equals false | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-list | select Batch
with [get-window "Select Debug Configuration"] {
    get-list | get-property "getSelectionIndices().length" | equals 1 | verify-true
    get-button Debug | get-property enablement | equals true | verify-true
    get-button Open | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Select Debug Configuration" | get-button Cancel | click

// Next section tests launching of 2nd debug launch configuration for each type
// See SWTBOT test method testButtonPressed_OpenButtonForExistingConfigurationWithMultipleLaunchConfigs()

get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "Batch - 2"
    get-button Open | click
}
with [get-window "Debug Configurations"] {
    get-editbox -after [get-label "Name:"] | get-property text | equals "Batch - 2" | verify-true
    get-button Debug | get-property enablement | equals true | verify-true
    get-button Close | get-property enablement | equals true | verify-true
}
get-window "Debug Configurations" | get-button Close | click
get-menu "Run/Debug As/2 Xpediter DB2 SP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "DB2 - 2"
    get-button Open | click
}
with [get-window "Debug Configurations"] {
    get-editbox -after [get-label "Name:"] | get-property text | equals "DB2 - 2" | verify-true
    get-button Debug | get-property enablement | equals true | verify-true
    get-button Close | get-property enablement | equals true | verify-true
}
get-window "Debug Configurations" | get-button Close | click
get-menu "Run/Debug As/3 Xpediter IMS MPP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "IMS - 2"
    get-button Open | click
}
with [get-window "Debug Configurations"] {
    get-editbox -after [get-label "Name:"] | get-property text | equals "IMS - 2" | verify-true
    get-button Debug | get-property enablement | equals true | verify-true
    get-button Close | get-property enablement | equals true | verify-true
}

// Next section tests debugging the 2nd launch configuration for each type and verifying the expected DDIO error
// See SWTBOT method testButtonPressed_DebugButtonWithMultipleLaunchConfigs()

get-window "Debug Configurations" | get-button Close | click
get-menu "Run/Debug As/1 Xpediter Batch Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "Batch - 2"
    get-button Open | click
}
get-window "Debug Configurations" | get-button Debug | click

handle-login-dialog

wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.BATCH.DDIO" | get-property "columns[0]" | equals "BAD.BATCH.DDIO" | verify-true
        get-item "BAD.BATCH.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click
get-menu "Run/Debug As/2 Xpediter DB2 SP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "DB2 - 2"
    get-button Open | click
}
get-window "Debug Configurations" | get-button Debug | click
handle-login-dialog
wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.DB2.DDIO" | get-property "columns[0]" | equals "BAD.DB2.DDIO" | verify-true
        get-item "BAD.DB2.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click
get-menu "Run/Debug As/3 Xpediter IMS MPP Debug Session..." | click
with [get-window "Select Debug Configuration"] {
    get-list | select "IMS - 2"
    get-button Debug | click
}
handle-login-dialog
wait-for-resource-validation-failed
with [get-window "Resource Validation Failed"] {
    with [get-table] {
        get-item "BAD.IMS.DDIO" | get-property "columns[0]" | equals "BAD.IMS.DDIO" | verify-true
        get-item "BAD.IMS.DDIO" | get-property "columns[1]" | equals "Not found" | verify-true
    }
    get-button Retry | get-property enablement | equals true | verify-true
    get-button Ignore | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "Resource Validation Failed" | get-button Cancel | click

// Next section tests sorting/ordering of debug configurations
// See SWTBOT method testSortOrderOfDebugConfigurations()

get-menu "Run/Debug Configurations..." | click
with [get-window "Debug Configurations" | get-tree] {
    get-item "Xpediter Batch Debug Session/Batch - 2" | get-property caption | equals "Batch - 2" | verify-true
    get-item "Xpediter Batch Debug Session/Batch - 2" | get-property index | equals 1 | verify-true
    get-item "Xpediter Batch Debug Session/Batch" | get-property caption | equals Batch | verify-true
    get-item "Xpediter Batch Debug Session/Batch" | get-property index | equals 0 | verify-true
    get-item "Xpediter DB2 SP Debug Session/DB2" | get-property caption | equals DB2 | verify-true
    get-item "Xpediter DB2 SP Debug Session/DB2" | get-property index | equals 0 | verify-true
    get-item "Xpediter DB2 SP Debug Session/DB2 - 2" | get-property caption | equals "DB2 - 2" | verify-true
    get-item "Xpediter DB2 SP Debug Session/DB2 - 2" | get-property index | equals 1 | verify-true
    get-item "Xpediter IMS MPP Debug Session/IMS" | get-property caption | equals IMS | verify-true
    get-item "Xpediter IMS MPP Debug Session/IMS" | get-property index | equals 0 | verify-true
    get-item "Xpediter IMS MPP Debug Session/IMS - 2" | get-property caption | equals "IMS - 2" | verify-true
    get-item "Xpediter IMS MPP Debug Session/IMS - 2" | get-property index | equals 1 | verify-true
    // Was not able to get testing working to compare the sorting of the Debug Config categories Batch/DB2/IMS
    // could not seem to store the index property in a variable using several different attempts (-raw, convert to int, etc. always got the EMF object?)
}
get-window "Debug Configurations" | get-button Close | click

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
