--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _XnPvkEUIEeamKrg04Gqe-Q,_VWD6oEUJEeamKrg04Gqe-Q,_PprFMER9EeamKrg04Gqe-Q,_l8aZYER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q
Element-Name: OnlineProjectDelete
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _zhd0MEUHEeamKrg04Gqe-Q
Runtime-Version: 2.2.0.201706152316
Save-Time: 9/22/17 9:19 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val tempPDS1 [generate-unique-dataset-name "XDEVREG.OLPDLT"]]
global [val projectName TestOnlineDelete]
global [val copyFromPDSName "XDEVREG.OLPDLT.COBOL"]
global [val copybookPDSName "XDEVREG.OLPDLT.CPYLIB"]
global [val comparePDS "XDEVREG.COMPARE"]
global [val comparePDSTemp [generate-unique-dataset-name "XDEVREG.COMPARE"]]
global [val cobolPDS1 "XDEVREG.COBOL"]
global [val linkDecorator "com.compuware.frameworks.imagerepository/images/ovr/linkDecorator.gif"]
global [val deleteResourcesTitle "Delete Resources"]

add-filter -filter $FILTER_XDEVREG -hostName $HOST -portNum $PORT

delete-online-project $projectName
create-online-project $projectName

// Test refresh of member in online project that has been deleted via Host Explorer
copy-pds -hostName $HOST -portNum $PORT -filter $FILTER_XDEVREG -sourcePDS $comparePDS -targetPDS $comparePDSTemp
add-source-online-project -hostName $HOST -portNum $PORT -projectName $projectName -datasetName $comparePDSTemp

get-view $HOST_EXPLORER | get-tree | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $comparePDSTemp -member "CHAD"] | get-menu Delete | click
with [get-window "Delete"] 
{
	get-button "Delete" | click
	get-button "Done" | click
}

get-view $PROJECT_EXPLORER | get-tree | select-pds-member-in-online-project -projectName $projectName -dataset $comparePDSTemp -member "CHAD.data"
    -hostName $HOST -portNum $PORT | get-menu Refresh | click

with [get-view $PROJECT_EXPLORER | get-tree] {
	verify-error {get-item [get-project-pds-member-path -project $projectName -dataset $comparePDSTemp -member "CHAD.data"]}
}

with [get-view $HOST_EXPLORER] {
    click
    get-tree | select [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $comparePDSTemp] | get-menu Delete | click
}
with [get-window Delete] {
    get-button Delete | click
    get-button Done | click
}

// End Test refresh of member in online project that has been deleted via Host Explorer

copy-pds -sourcePDS $copyFromPDSName -targetPDS $tempPDS1
add-source-online-project -projectName TestOnlineDelete -datasetName $tempPDS1

// Copy just a few dedicated members from PDS XDEVREG.COBOL that will be used to test deletion of online project
// resources but leaving mainframe host resources intact.

get-view $HOST_EXPLORER | get-tree | select [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1] | get-menu Refresh | click

with [get-view $HOST_EXPLORER | get-tree] {
	select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT1] 
	       [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT2] 
	       [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT3]
	get-menu "Add Files to Project..." | click
}
with [get-window "Add Files To Project"] {
	get-editbox -after [get-label [format "Compuware Mainframe Projects using host %s:%s:" $HOST $PORT]] | set-focus
	get-table | select TestOnlineDelete
	get-button Finish | click
}

// Verify Delete Dialog Title when attempting to delete online project
with [get-view $PROJECT_EXPLORER | get-tree | select [format "%s [%s:%s]" $projectName $HOST $PORT]] { 
    get-menu Delete | click
	get-window $deleteResourcesTitle | get-button No | click
}


// Verify delete menu is not available for dedicated Copybook or Source folders using right click menu as well as delete key
with [get-view $PROJECT_EXPLORER | get-tree | select [format "%s [%s:%s]/%s" $projectName $HOST $PORT "Copybook Concatenation"]] { 
    verify-error {get-menu Delete}
    key-type Del
	verify-error { get-window $deleteResourcesTitle }
}

with [get-view $PROJECT_EXPLORER | get-tree | select [format "%s [%s:%s]/%s" $projectName $HOST $PORT "Source"]] { 
    get-menu "Delete" |get-property enablement | equals false | verify-true
    key-type Del
	verify-error { get-window $deleteResourcesTitle }
}

add-copybook-online-project -project $projectName -hostName $HOST -portNum $PORT -copybook $copybookPDSName

with [select-copybook-pds-in-online-project -projectName $projectName -hostName $HOST -portNum $PORT -dataset $copybookPDSName] {
	verify-error { get-menu "Delete" }
    key-type Del
	verify-error { get-window $deleteResourcesTitle }
}

with [select-copybook-member-in-online-project -projectName $projectName -hostName $HOST -portNum $PORT -dataset $copybookPDSName -memberName "PDACOMM.data"] {
	verify-error { get-menu "Delete" }
    key-type Del
	verify-error { get-window $deleteResourcesTitle }
}

// checkbox to delete resources from host should be enabled for entire new PDS
get-tab-folder | get-tab-item $PROJECT_EXPLORER | click
get-view $PROJECT_EXPLORER | get-tree | select-pds-in-online-project -projectName $projectName -dataset $tempPDS1  | get-menu Delete | click
with [get-window $deleteResourcesTitle | get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT]] {
	get-property enablement | equals true | verify-true
	get-property selected | equals false | verify-true
}
get-window $deleteResourcesTitle | get-button No | click

// checkbox to delete resources from host should be disabled for partial PDS XDEVREG.COBOL
get-view $PROJECT_EXPLORER | get-tree | select-pds-in-online-project -projectName $projectName -dataset $cobolPDS1
    -hostName $HOST -portNum $PORT | get-menu Delete | click
with [get-window $deleteResourcesTitle | get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT]] {
	get-property enablement | equals false | verify-true
	get-property selected | equals false | verify-true
}
get-window $deleteResourcesTitle | get-button No | click
with [get-view $PROJECT_EXPLORER | get-tree] {
    select [get-project-dataset-path -project $projectName -dataset $cobolPDS1] [get-project-dataset-path
        -project $projectName -dataset $tempPDS1]
    get-menu Delete | click
}
get-window $deleteResourcesTitle | get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT]
    | get-property enablement | equals false | verify-true
get-window $deleteResourcesTitle | get-button No | click

// Delete the three test members from PDS XDEVREG.COBOL and delete them from the project but NOT the mainframe
// and verify they still exist on the mainframe.
with [get-view $PROJECT_EXPLORER | get-tree] {
    select [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT1.cbl"]
        [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT2.cbl"]
        [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT3.cbl"]
    get-menu Delete | click
}

get-window $deleteResourcesTitle | get-button Yes | click

with [get-view $PROJECT_EXPLORER | get-tree] {
	verify-error {get-item [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT1.cbl"]}
	verify-error {get-item [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT2.cbl"]}
	verify-error {get-item [get-project-pds-member-path -project $projectName -dataset $cobolPDS1 -member "OLPDLT3.cbl"]}
}

// Refresh Host Explorer after deleting project resources
select-filter -hostName $HOST -port $PORT -filter $FILTER_XDEVREG | get-menu Refresh | click

get-view $HOST_EXPLORER| get-tree | select 
     [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT1] 
     [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT2] 
     [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1 -member OLPDLT3]
with [get-view $HOST_EXPLORER | get-tree] {
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT1] | get-property caption | equals OLPDLT1 | verify-true
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT1] | get-property selected | equals true | verify-true
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT2] | get-property caption | equals OLPDLT2 | verify-true
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT2] | get-property selected | equals true | verify-true
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT3] | get-property caption | equals OLPDLT3 | verify-true
    get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1
        -member OLPDLT3] | get-property selected | equals true | verify-true
}

// Delete the PDS.XDEVREG.COBOL dataset from the project, but NOT from the mainframe. Verify dataset is removed from project,
// but not deleted on the mainframe.
select-pds-in-online-project -projectName $projectName -dataset $cobolPDS1 -hostName $HOST -portNum $PORT | get-menu Delete
    | click
get-window $deleteResourcesTitle | get-button Yes | click
get-view $PROJECT_EXPLORER | get-tree | verify-error {
	get-item [get-project-dataset-path -projectName $projectName -dataset $cobolPDS1 ]
}

// Refresh Host Explorer after deleting project resources
select-filter -hostName $HOST -port $PORT -filter $FILTER_XDEVREG | get-menu Refresh | click
        
// Verify new PDS still exists on mainframe
get-view $HOST_EXPLORER | get-tree | 
    get-item [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $cobolPDS1] | get-property caption  | equals $cobolPDS1 | verify-true
    
get-tab-folder | get-tab-item $PROJECT_EXPLORER | click
select-pds-in-online-project -projectName $projectName -dataset $tempPDS1 -hostName $HOST -portNum $PORT | get-menu Delete
    | click
with [get-window $deleteResourcesTitle] {
    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
    get-button Yes | click
}
get-view $PROJECT_EXPLORER | get-tree | verify-error {
	get-item [get-project-dataset-path -projectName $projectName -dataset $tempPDS1 ]
}

get-tab-folder | get-tab-item $HOST_EXPLORER | click
select-filter -hostName $HOST -port $PORT -filter $FILTER_XDEVREG | get-menu Refresh | click

// Verify new PDS no longer exists on mainframe
get-view $HOST_EXPLORER | get-tree | verify-error {
    get-item [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1]
}

// Create the temporary PDS again for further tests
copy-pds -sourcePDS $copyFromPDSName -targetPDS $tempPDS1
add-source-online-project -projectName TestOnlineDelete -datasetName $tempPDS1

// Delete one member from an online project AND the mainframe out of an "entire" PDS - verify the PDS is still marked/decorated as the entire PDS

get-tab-folder | get-tab-item $PROJECT_EXPLORER | click
select-pds-member-in-online-project -projectName $projectName -dataset $tempPDS1 -member "TB000004.data" -hostName $HOST -portNum $PORT | get-menu Delete | click
with [get-window $deleteResourcesTitle] {
    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
    get-button Yes | click
}

get-view $PROJECT_EXPLORER | get-tree | get-item [format "%s [%s:%s]/Source/%s [%s:%s]" $projectName $HOST $PORT $tempPDS1 $HOST $PORT] 
    | get-property "image.decorations[0].path" 
    | equals $linkDecorator | verify-true

// Delete one member from an online project but NOT the mainframe out of an "entire" PDS - verify the PDS is not marked/decorated as the entire PDS
    
select-pds-member-in-online-project -projectName $projectName -dataset $tempPDS1 -member "TB000005.data" -hostName $HOST -portNum $PORT | get-menu Delete | click
get-window $deleteResourcesTitle | get-button Yes | click

get-view $PROJECT_EXPLORER | get-tree | get-item [format "%s [%s:%s]/Source/%s [%s:%s]" $projectName $HOST $PORT $tempPDS1 $HOST $PORT] 
    | verify-error { get-property "image.decorations[0].path" | equals $linkDecorator | verify-true }

add-source-online-project -projectName TestOnlineDelete -datasetName $tempPDS1

// Open a member from the temporary PDS in edit mode within Host Explorer
get-view $HOST_EXPLORER | get-tree 
    | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1 -member "TB000023"] | get-menu Edit | click

get-tab-folder | get-tab-item $PROJECT_EXPLORER | click
select-pds-member-in-online-project -projectName $projectName -dataset $tempPDS1 -member "TB000023.data" -hostName $HOST -portNum $PORT | get-menu Delete | click
with [get-window $deleteResourcesTitle] {
    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
    get-button Yes | click
}

// Delete should fail because member is open in edit mode within Host Explorer

get-window "Delete Online Project Linked Mainframe Resources" 
    | get-label "An error occurred while trying to delete a PDS member." | get-property caption 
    | equals "An error occurred while trying to delete a PDS member." | verify-true
get-window "Delete Online Project Linked Mainframe Resources" | get-button OK | click

get-editor "TB000023.data" | close

// After closing editor, deleting member should now succeed.

select-pds-member-in-online-project -projectName $projectName -dataset $tempPDS1 -member "TB000023.data" -hostName $HOST -portNum $PORT | get-menu Delete | click
with [get-window $deleteResourcesTitle] {
    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
    get-button Yes | click
}

// log out so we are prompted for a log in when attempting to delete from the online project
logout

exec-with-options -disableJobWaiting -command {
	get-tab-folder | get-tab-item $PROJECT_EXPLORER | click
	select-pds-in-online-project -projectName $projectName -dataset $tempPDS1 -hostName $HOST -portNum $PORT | get-menu Delete
	    | click
	with [get-window $deleteResourcesTitle] {
	    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
	    get-button Yes | click
	}
	
	// Cancel the log in attempt
	try -delay 1000 -times 10 -command 
	{
		get-window Login | get-button Cancel | click
	} -catch
	{
	}
	
	// cancelling the login should have produced an error dialog
	get-window "Delete Online Project Linked Mainframe Resources" 
	    | get-label [format "An unexpected exception occurred.Exception: The specified action requires you to be logged in. Please log into host %s:%s." $HOST $PORT] 
	    | get-property caption | equals [format "An unexpected exception occurred.\nException: The specified action requires you to be logged in. Please log into host %s:%s." $HOST $PORT] | verify-true
	get-window "Delete Online Project Linked Mainframe Resources" | get-button OK | click
	
	// try to delete again, only this time enter a valid log in
	select-pds-in-online-project -projectName $projectName -dataset $tempPDS1 -hostName $HOST -portNum $PORT | get-menu Delete
	    | click
	with [get-window $deleteResourcesTitle] {
	    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
	    get-button Yes | click
	}
	
	with [get-window Login] {
	    with [get-editbox -after [get-label "User ID:"]] {
	        set-text xdevreg
	        key-type "TRAVERSE_TAB_NEXT"
	    }
	    get-editbox -after [get-label "Password:"] | set-text [decrypt "GCCQ5KeLMRHd4spOzx8A1g=="]
	    get-button OK | click
	}

}

get-view $PROJECT_EXPLORER | get-tree | verify-error {
	get-item [get-project-dataset-path -projectName $projectName -dataset $tempPDS1 ]
}

// Refresh host explorer
get-tab-folder | get-tab-item $HOST_EXPLORER | click
select-filter -hostName $HOST -port $PORT -filter $FILTER_XDEVREG | get-menu Refresh | click

// Verify new PDS no longer exists on mainframe
get-view $HOST_EXPLORER | get-tree | verify-error {
    get-item [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1]
}

// Create the temporary PDS again for further tests
copy-pds -sourcePDS $copyFromPDSName -targetPDS $tempPDS1
add-source-online-project -projectName TestOnlineDelete -datasetName $tempPDS1

// Put member TB000006 in edit mode within Host Explorer
get-view $HOST_EXPLORER | get-tree 
    | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1 -member "TB000006"] | get-menu Edit | click

with [get-view $PROJECT_EXPLORER | get-tree] {
    select [get-project-dataset-path -project $projectName -dataset $tempPDS1]
    get-menu Delete | click
}

with [get-window $deleteResourcesTitle] {
    get-button [format "Delete resources from host %s:%s? (cannot be undone)" $HOST $PORT] | check
    get-button Yes | click
}

get-window "Delete Online Project Linked Mainframe Resources" 
    | get-property caption 
    | matches "An error occurred while trying to delete a dataset. The dataset is in use by Compuware Job*"
get-window "Delete Online Project Linked Mainframe Resources" | get-button OK | click

get-editor "TB000006.data" | close

// Refresh host explorer
get-tab-folder | get-tab-item $HOST_EXPLORER | click
select-filter -hostName $HOST -port $PORT -filter $FILTER_XDEVREG | get-menu Refresh | click

get-view $HOST_EXPLORER | get-tree | select [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1 -member "TB000006"]
get-view $HOST_EXPLORER | get-tree 
    | get-item [get-pds-member-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $tempPDS1 -member "TB000006"] | get-property selected 
    | equals true | verify-true
    
delete-online-project $projectName
delete-pds -datasetName $tempPDS1

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
