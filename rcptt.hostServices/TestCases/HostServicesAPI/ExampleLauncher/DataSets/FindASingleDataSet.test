--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _PprFMER9EeamKrg04Gqe-Q,_wvcyALzIEearCfJIpjdCZQ,_kRuZMER7EeamKrg04Gqe-Q
Element-Name: FindASingleDataSet
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _c1AesL46EearCfJIpjdCZQ
Runtime-Version: 2.2.0.201706152316
Save-Time: 9/14/17 1:34 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

/****** Global variables ******/

global [val exampleDirectory "Host Services API/Datasets/Find a Single Dataset"]
global [val resultDialogTitle "Find a Single Dataset Results"]

/****** Procedures ******/

proc "enter-data-set-in-dialog" [val dsn] [val type "Any"]
{
	with [get-window "Find a Single Dataset Example"]
	{
	    with [get-editbox -after [get-label "Dataset name:"]]
	    {
	        set-text $dsn
	    }
	    with [get-combo -after [get-label "Dataset type:"]]
	    {
	        set-value $type
	    }
	    get-button Run | click
	}
}

/****** Start up ******/

open-example-launcher-view

/****** Tests ******/

// Test a non-existant dataset
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.NOT.FOUND"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Could not find \"XDEVREG.NOT.FOUND\" of type \"Any\" on host \"cw01:%s\"" $PORT] 

// Test a dsn that is too large
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.DSNTOOLARGE"
verify-example-result -dialogTitle $resultDialogTitle -resultValue "Argument \"dataSetName\" is not a valid dataset name for code page 1047. Argument value: XDEVREG.DSNTOOLARGE"

// Test a dsn that has an invalid character
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.INVALID!.CHAR"
verify-example-result -dialogTitle $resultDialogTitle -resultValue "Argument \"dataSetName\" is not a valid dataset name for code page 1047. Argument value: XDEVREG.INVALID!.CHAR"

// Test with the "Any" type
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.COBOL.COPYLIB"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Found \"XDEVREG.HS.API.TEST.COBOL.COPYLIB\" of type \"PARTITIONED\" on host \"cw01:%s\"" $PORT]

// Test with the "PARTITIONED" type
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.PDS.CNTL" -type "PARTITIONED"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Found \"XDEVREG.HS.API.TEST.PDS.CNTL\" of type \"PARTITIONED\" on host \"cw01:%s\"" $PORT]

execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.SEQ.MIGRATED" -type "PARTITIONED"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Could not find \"XDEVREG.HS.API.TEST.SEQ.MIGRATED\" of type \"PARTITIONED\" on host \"cw01:%s\"" $PORT]

// Test with the "SEQUENTIAL" type
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.SEQ" -type "SEQUENTIAL"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Found \"XDEVREG.HS.API.TEST.SEQ\" of type \"SEQUENTIAL\" on host \"cw01:%s\"" $PORT]

execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.COBOL.COPYLIB" -type "SEQUENTIAL"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Could not find \"XDEVREG.HS.API.TEST.COBOL.COPYLIB\" of type \"SEQUENTIAL\" on host \"cw01:%s\"" $PORT]

// Test with the "VSAM" type
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.KSDS" -type "VSAM"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Found \"XDEVREG.HS.API.TEST.KSDS\" of type \"VSAM\" on host \"cw01:%s\"" $PORT]

execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.SEQ" -type "VSAM"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Could not find \"XDEVREG.HS.API.TEST.SEQ\" of type \"VSAM\" on host \"cw01:%s\"" $PORT]

// Test with the "MIGRATED" type
execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.SEQ.MIGRATED" -type "MIGRATED"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Found \"XDEVREG.HS.API.TEST.SEQ.MIGRATED\" of type \"MIGRATED\" on host \"cw01:%s\"" $PORT]

execute-example -exampleDirectory $exampleDirectory
enter-data-set-in-dialog -dsn "XDEVREG.HS.API.TEST.KSDS" -type "MIGRATED"
verify-example-result -dialogTitle $resultDialogTitle -resultValue [format "Could not find \"XDEVREG.HS.API.TEST.KSDS\" of type \"MIGRATED\" on host \"cw01:%s\"" $PORT]

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
