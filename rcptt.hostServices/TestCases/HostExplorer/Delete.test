--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _l8_BIER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q
Element-Name: Delete
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _n3FpEIQcEeeBzIACB75XrA
Runtime-Version: 2.2.0.201606232320
Save-Time: 4/18/18 1:25 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val testPDS1 [format "XDEVREG.DELETE1.T%S" [get-time | format-time -format mmssSSS]]]
global [val testPDS2 [format "XDEVREG.DELETE2.T%S" [get-time | format-time -format mmssSSS]]]
global [val testMember1 "DLT1"]
global [val testMember2 "DLT2"]
global [val testMember3 "DLT3"]

add-filter $FILTER_XDEVREG

// This makes sure the Contents view is not currently visible to prevent the bug reported in CWE-119316 from failing
// this test. (This can be removed once that is fixed).
get-view Console | click

// Allocate a new temporary PDS to create some members
get-menu "File/New/PDS or Sequential Dataset" | click

with [get-window "Allocate Dataset"] {
    with [get-editbox -after [get-label "Dataset name:"]] {
        set-text $testPDS1
    }
    get-button "Allocate Like..." | click
    with [get-window "Dataset Selection"] {
        with [get-section Datasets] {
            with [get-editbox -after [get-label "Name:"]] {
                set-text "XDEVREG*"
            }
            get-button List | click
            get-table | select "XDEVREG.COBOL"
        }
        get-button OK | click
    }
    get-button Finish | click
	get-window "Allocate Dataset" | get-button OK | click
}


get-menu "File/New/PDS or Sequential Dataset" | click

with [get-window "Allocate Dataset"] {
    with [get-editbox -after [get-label "Dataset name:"]] {
        set-text $testPDS2 
    }
    get-button "Allocate Like..." | click
    with [get-window "Dataset Selection"] {
        with [get-section Datasets] {
            with [get-editbox -after [get-label "Name:"]] {
                set-text "XDEVREG*"
            }
            get-button List | click
            get-table | select "XDEVREG.COBOL"
        }
        get-button OK | click
    }
    get-button Finish | click
	get-window "Allocate Dataset" | get-button OK | click
}



get-view $HOST_EXPLORER | get-tree | select [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $testPDS1]
    | get-menu "New Member..." | click
get-window "New Member" | get-editbox -after [get-label "Member name:"] | set-text $testMember1
with [get-window "New Member"] {
    get-button OK | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "New Member" | get-button OK | click
get-editor [format "%S.data" $testMember1] | close

get-view $HOST_EXPLORER | get-tree | select [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $testPDS1]
    | get-menu "New Member..." | click
get-window "New Member" | get-editbox -after [get-label "Member name:"] | set-text $testMember2
with [get-window "New Member"] {
    get-button OK | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "New Member" | get-button OK | click
get-editor [format "%S.data" $testMember2] | close

get-view $HOST_EXPLORER | get-tree | select [get-pds-path -hostName $HOST -portNUM $PORT -filter $FILTER_XDEVREG -dataset $testPDS1]
    | get-menu "New Member..." | click
get-window "New Member" | get-editbox -after [get-label "Member name:"] | set-text $testMember3
with [get-window "New Member"] {
    get-button OK | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
get-window "New Member" | get-button OK | click
get-editor [format "%S.data" $testMember3] | close


get-view "Host Explorer" | get-tree | select-pds-member -dataset $testPDS1 -member $testMember1 -filter $FILTER_XDEVREG -hostName $HOST -portNum $PORT
    | get-menu Delete | click
get-window Delete | get-table | get-item DLT1 | get-property "getData().getType()" | equals PDSMEMBER | verify-true
get-window Delete | get-button Delete | click
get-window Delete | get-button Done | click

with [get-view "Host Explorer" | get-tree] {
    select [format "Hosts/%s:%s/z\\/OS Datasets/xdevreg/%s/%s" $HOST $PORT $testPDS1 $testMember2] [format "Hosts/%s:%s/z\\/OS Datasets/xdevreg/%s/%s" $HOST $PORT $testPDS1 $testMember3]
    get-menu Delete | click
}
with [get-window Delete | get-table] {
    get-item DLT2 | get-property "getData().getType()" | equals PDSMEMBER | verify-true
    get-item DLT3 | get-property "getData().getType()" | equals PDSMEMBER | verify-true
}
with [get-window Delete] {
    get-button Delete | click
    get-button Done | click
}

with [get-view "Host Explorer" | get-tree] {
	select [format "Hosts/%s:%s/z\\/OS Datasets/xdevreg/%s" $HOST $PORT $testPDS1] [format "Hosts/%s:%s/z\\/OS Datasets/xdevreg/%s" $HOST $PORT $testPDS2]
    get-menu Delete | click
}
with [get-window Delete | get-table] {
    get-item $testPDS1 | get-property "getData().getType()" | equals PDS | verify-true
    get-item $testPDS2 | get-property "getData().getType()" | equals PDS | verify-true
}
with [get-window Delete] {
    get-button Delete | click
    get-button Done | click
}
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
