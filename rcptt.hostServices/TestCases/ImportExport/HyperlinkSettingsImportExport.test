--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _qfJHMH_jEeahW91r4IViYw,_PprFMER9EeamKrg04Gqe-Q,_GcCAAK_gEeaI5LAUP6iy4A
Element-Name: HyperlinkSettingsImportExport
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _0h7awH_jEeahW91r4IViYw
Runtime-Version: 2.2.0.201705230341
Save-Time: 11/29/17 8:30 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val exportLocation [concat [get-workspace-location]"/HyperlinksProject/ImportExport"]]
global [val noExtensions ""]
global [val extensionsListAbc "abc"]
global [val extensionsList3 "def,ghi,jkl"]
global [val extensionsPerListEnabled [bool true]]
global [val extensionsPerListDisabled [bool false]]

proc "perform-import-export" [val extension1] [val extension2] [val extension3] [val exportAll] [val delimitedExtensionsList] [val extensionsPerListValue] [val extensionsPerListCheckboxValue]
{
	get-preferences-menu | click
	with [get-window Preferences] {
		get-tree | select "Compuware/Hyperlinks"
	    get-button "Restore Defaults" | click
	    with [get-group "File extensions"] {   
    
	        get-list | select jcl
	        get-button Remove | click
	        get-list | select jes
	        get-button Remove | click
 
	        if [$extension1 | not-eq ""]
	        {
	        	get-editbox | set-text $extension1
	        	get-button Add | click
	        }
	        if [$extension2 | not-eq ""]
	        {
	        	get-editbox | set-text $extension2
	        	get-button Add | click
	        }
	        if [$extension3 | not-eq ""]
	        {
	        	get-editbox | set-text $extension3
	        	get-button Add | click
	        }	        

	       if [$extensionsPerListCheckboxValue | equals "N"]
	       {
	       	    get-button "Only display z/OS dataset hyperlinks for the following file extensions:" | uncheck
	       }

	    }
	    get-button OK | click
	}
	get-menu "File/Export..." | click
	with [get-window Export] {
	    get-tree | select "Compuware/Compuware Configuration Settings"
	    get-button "Next >" | click
    }  
	if [$exportAll | equals "Y"]
	{
		get-window "Export Compuware Configuration Settings" | get-button "Export all" | click
	}
	-else
	{
		with [get-window "Export Compuware Configuration Settings"] {
			get-group "Configuration Settings" | get-tree | select "Host Explorer" 
		        | get-item "Host Explorer/Hyperlinks" | check
		}		
	}	
	
	with [get-window "Export Compuware Configuration Settings"] {
		    get-combo -after [get-label "To directory:"] | set-text $exportLocation
		    get-button "Overwrite existing files without warning" | check
	    get-button Finish | click
	    try -command {
	    	get-window "Import/Export Warning" | get-button Yes | click
	    } -catch {
	    	// Okay if window is missing
	    } 
	}
 
	// validate exported data

	invoke-static -pluginId "com.compuware.frameworks.hostservices.test.utils" -className "com.compuware.frameworks.hostservices.test.utils.HostServicesTestUtils" -methodName "validateHyperlinkExportData" -args $exportLocation -args $delimitedExtensionsList -args $extensionsPerListValue  
    
    get-window "Import/Export" | get-button OK | click
	get-menu "File/Import..." | click
	with [get-window Import] {
	    get-tree | select "Compuware/Compuware Configuration Settings"
	    get-button "Next >" | click
	}
	if [$exportAll | equals "Y"]
	{
		get-window "Import Compuware Configuration Settings" | get-button "Import all" | click
	}
	with [get-window "Import Compuware Configuration Settings"] {
    get-group "Configuration Settings" | get-tree | select "Host Explorer" 
        | get-item "Host Explorer/Hyperlinks" | check
    get-combo -after [get-label "From directory:"] | select $exportLocation
    get-button Finish | click
    try -command
    {
    	get-window $HOST_EXPLORER | get-button OK | click
    }
    -catch
    {
    }
    get-window "Import/Export" | get-button OK | click
}
	get-preferences-menu | click
	with [get-window Preferences | get-group "File extensions" | get-list] {
	    //get-property "getItems().length" | equals 1 | verify-true
	    //get-property "getItems().String[0]" | equals abc | verify-true
	    if [$extension1 | not-eq ""]
	    {
	        get-property "getItems().String[0]" | equals $extension1 | verify-true
	    }
	    if [$extension2 | not-eq ""]
	    {
	        get-property "getItems().String[1]" | equals $extension2 | verify-true
	    }	    
	    if [$extension3 | not-eq ""]
	    {
	        get-property "getItems().String[2]" | equals $extension3 | verify-true
	    }
	}
	if [$extensionsPerListCheckboxValue | equals "Y"]
	{
			with [get-window Preferences | get-group "File extensions" 
			    | get-button "Only display z/OS dataset hyperlinks for the following file extensions:"] {
			    get-property caption | equals "Only display z/OS dataset hyperlinks for the following file extensions:" 
			        | verify-true
			    get-property selected | equals true | verify-true
		    }
	}

	get-window Preferences | get-button OK | click
}


perform-import-export -extension1 "" -extension2 "" -extension3 "" -exportAll "N" -delimitedExtensionsList $noExtensions -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"
perform-import-export -extension1 "" -extension2 "" -extension3 "" -exportAll "Y" -delimitedExtensionsList $noExtensions -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"

perform-import-export -extension1 "abc" -extension2 "" -extension3 "" -exportAll "N" -delimitedExtensionsList $extensionsListAbc -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"
perform-import-export -extension1 "abc" -extension2 "" -extension3 "" -exportAll "Y" -delimitedExtensionsList $extensionsListAbc -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"

perform-import-export -extension1 "def" -extension2 "ghi" -extension3 "jkl" -exportAll "N" -delimitedExtensionsList $extensionsList3 -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"
perform-import-export -extension1 "def" -extension2 "ghi" -extension3 "jkl" -exportAll "N" -delimitedExtensionsList $extensionsList3 -extensionsPerListValue $extensionsPerListDisabled -extensionsPerListCheckboxValue "N"
perform-import-export -extension1 "def" -extension2 "ghi" -extension3 "jkl" -exportAll "Y" -delimitedExtensionsList $extensionsList3 -extensionsPerListValue $extensionsPerListEnabled -extensionsPerListCheckboxValue "Y"
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
