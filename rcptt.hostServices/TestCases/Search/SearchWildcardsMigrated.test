--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _PprFMER9EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q,_J07C0A10EeeqcLs0Ht7rNg
Element-Name: SearchWildcardsMigrated
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _GpIv0OPqEeeUyZopB_5zVA
Runtime-Version: 2.2.0.201606232320
Save-Time: 2/22/18 2:48 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val migratedPds "XDEVREG.OLPMIG.COBOL"]
global [val cobolPds "XDEVREG.COBOL"]
global [val filter1 "XDEVREG.OLPMIG.COBOL(C*)"]
global [val filter2 "XDEVREG.COBOL(C*)"]
global [val migrateJobName "XDEVMIG2"]

purge-jobs $migrateJobName
submit-job -dataset "XDEVREG.HS.JCL" -member "MIGRATE2" 
wait-for-job-completion $migrateJobName

add-filter -filter $filter1
add-filter -filter $filter2

// Search filters - one is migrated
with [get-view "Host Explorer" | get-tree] {
    select [format "Hosts/%s:%s/z\\/OS Datasets/%s" $HOST $PORT $filter1] [format "Hosts/%s:%s/z\\/OS Datasets/%s" $HOST $PORT $filter2]
    get-menu -path "Search..." | click
}
with [get-window Search] {
    with [get-combo -after [get-label "Search for text:"]] {
        set-text Progra
    }
    get-button Search | click
}

with [get-window Search | get-window Search] {
    get-label "The dataset(s) to search contains 1 migrated dataset(s). Do you want to recall or skip the migrated dataset(s)?" 
        | get-property caption 
        | equals "The dataset(s) to search contains 1 migrated dataset(s). Do you want to recall or skip the migrated dataset(s)?" 
        | verify-true
    with [get-button Recall] {
        get-property enablement | equals true | verify-true
        get-property caption | equals Recall | verify-true
    }
    with [get-button Skip] {
        get-property enablement | equals true | verify-true
        get-property caption | equals Skip | verify-true
    }
    with [get-button Cancel] {
        get-property enablement | equals true | verify-true
        get-property caption | equals Cancel | verify-true
    }
}

// Skip should not recall and search the migrated dataset

get-window Search | get-window Search | get-button Skip | click
with [get-view Search | get-tree] {
    get-item -path "XDEVREG.COBOL" | get-property caption | equals "XDEVREG.COBOL" | verify-true
    get-item -path "XDEVREG.COBOL" | get-property index | equals 0 | verify-true
}
with [get-view $HOST_EXPLORER | get-tree] {
    get-item -path [format "Hosts/%s:%s/z\\/OS Datasets/XDEVREG.OLPMIG.COBOL\\(C\\*\\)/XDEVREG.OLPMIG.COBOL" $HOST $PORT]
        | get-property caption | equals "XDEVREG.OLPMIG.COBOL" | verify-true
    get-item -path [format "Hosts/%s:%s/z\\/OS Datasets/XDEVREG.OLPMIG.COBOL\\(C\\*\\)/XDEVREG.OLPMIG.COBOL" $HOST $PORT]
        | get-property "image.path" 
        | equals "com.compuware.frameworks.imagerepository/images/obj/directory_migrated.gif" | verify-true
}
with [get-view $HOST_EXPLORER | get-tree] {
    select [format "Hosts/%s:%s/z\\/OS Datasets/XDEVREG.OLPMIG.COBOL(C*)" $HOST $PORT] [format "Hosts/%s:%s/z\\/OS Datasets/XDEVREG.COBOL(C*)" $HOST $PORT]
    get-menu -path "Search..." | click
}
with [get-window Search] {
    get-button Search | click
    get-window Search | get-button Recall | click
}

// Search results should contain both datasets (migrated dataset was recalled and searched).
with [get-view Search | get-tree] {
    get-item -path "XDEVREG.COBOL" | get-property caption | equals "XDEVREG.COBOL" | verify-true
    get-item -path "XDEVREG.COBOL" | get-property index | equals 0 | verify-true
    get-item -path "XDEVREG.OLPMIG.COBOL" | get-property caption | equals "XDEVREG.OLPMIG.COBOL" | verify-true
    get-item -path "XDEVREG.OLPMIG.COBOL" | get-property index | equals 1 | verify-true
}

remove-filter -filter $filter1
remove-filter -filter $filter2
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
