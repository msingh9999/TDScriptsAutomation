--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _l8aZYER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q,_PprFMER9EeamKrg04Gqe-Q
Element-Name: SearchAndHostExplorerInteraction
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _ljbUIL05Eeaqp4c4eJvd8g
Runtime-Version: 2.1.0.201606221726
Save-Time: 12/9/16 2:15 PM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Tests the interaction between showing a resources properties from the Host Explorer view and the Search results view.
Cases covered:
* Viewing properties from Host Explorer still works after first viewing them from the Search view
* Viewing properties from the Search view still works after first viewing them from Host Explorer

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

add-filter $FILTER_XDEVREG

global [val dataset1 "XDEVREG.PROPVIEW.TST3.COBOL"]
global [val dataset2 "XDEVREG.PROPVIEW.TST4.COBOL"]

/*
 * Test that viewing properties from Host Explorer works after first viewing them from the Search view:
 */

do-search $dataset1 "EMP"

// Expand the dataset node to force the creation of its member tree nodes (our goal is to test the synchronization of
// these nodes with the search result nodes.)
get-view "Host Explorer" | get-tree
	| get-item [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s" $HOST $PORT $FILTER_XDEVREG $dataset1] | expand

get-view Search | get-tree | select $dataset1 | get-menu "Show In/Properties" | click
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Allocated Extents" | get-property caption | equals "Allocated Extents" | verify-true
    get-item "Allocated Units" | get-property caption | equals "Allocated Units" | verify-true
    get-item "Allocation Type" | get-property caption | equals "Allocation Type" | verify-true
    get-item "Volume Serial" | get-property caption | equals "Volume Serial" | verify-true
}
get-view Search | get-tree | select [format "%s/DEBUG.*" $dataset1] | get-menu "Show In/Properties" | click
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}
get-view Search | get-tree | select [format "%s/ALATRA10.*" $dataset1] | get-menu "Show In/Properties" | click
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}

get-view "Host Explorer" | get-tree
	| select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s" $HOST $PORT $FILTER_XDEVREG $dataset1]
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Allocated Extents" | get-property caption | equals "Allocated Extents" | verify-true
    get-item "Allocated Units" | get-property caption | equals "Allocated Units" | verify-true
    get-item "Allocation Type" | get-property caption | equals "Allocation Type" | verify-true
    get-item "Volume Serial" | get-property caption | equals "Volume Serial" | verify-true
}
get-view "Host Explorer" | get-tree
	| select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s/DEBUG" $HOST $PORT $FILTER_XDEVREG $dataset1]
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}
get-view "Host Explorer" | get-tree
	| select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s/ALATRA10" $HOST $PORT $FILTER_XDEVREG $dataset1]
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}

/*
 * Test that viewing properties from Search view works after first viewing them from the Host Explorer:
 */

do-search $dataset2 "EMP"

get-view "Host Explorer"
	| get-tree | select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s" $HOST $PORT $FILTER_XDEVREG $dataset2]
	| get-menu "Properties" | click
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Allocated Extents" | get-property caption | equals "Allocated Extents" | verify-true
    get-item "Allocated Units" | get-property caption | equals "Allocated Units" | verify-true
    get-item "Allocation Type" | get-property caption | equals "Allocation Type" | verify-true
    get-item "Volume Serial" | get-property caption | equals "Volume Serial" | verify-true
}
get-view "Host Explorer" | get-tree
	| select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s/DEBUG" $HOST $PORT $FILTER_XDEVREG $dataset2]
	| get-menu "Properties" | click
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}
get-view "Host Explorer" | get-tree
	| select [format "Hosts/%s:%s/z\\/OS Datasets/%s/%s/ALATRA10" $HOST $PORT $FILTER_XDEVREG $dataset2]
	| get-menu "Properties" | click
with [get-view Properties | get-tree] {
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}

get-view Search | get-tree | select $dataset2
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Allocated Extents" | get-property caption | equals "Allocated Extents" | verify-true
    get-item "Allocated Units" | get-property caption | equals "Allocated Units" | verify-true
    get-item "Allocation Type" | get-property caption | equals "Allocation Type" | verify-true
    get-item "Volume Serial" | get-property caption | equals "Volume Serial" | verify-true
}
get-view Search | get-tree | select [format "%s/DEBUG.*" $dataset2]
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}
get-view Search | get-tree | select [format "%s/ALATRA10.*" $dataset2]
with [get-view Properties | get-tree]
{
	get-property itemCount -raw | gt 0 | verify-true
    get-item "Creation Date" | get-property caption | equals "Creation Date" | verify-true
    get-item "File Extension" | get-property caption | equals "File Extension" | verify-true
    get-item "Version Level" | get-property caption | equals "Version Level" | verify-true
}

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
