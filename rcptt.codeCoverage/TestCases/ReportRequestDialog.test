--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _eEaF4ER8EeamKrg04Gqe-Q,_UrIe0ER7EeamKrg04Gqe-Q,_urTgQEU4EeamKrg04Gqe-Q,_ktRQQER8EeamKrg04Gqe-Q,_YuwFQER7EeamKrg04Gqe-Q,_bewi4INKEeeBlORhDXuIag,_PprFMER9EeamKrg04Gqe-Q,_l8_BIER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q,_DIm2ALsyEeem0fyxENOpag,_uGGawHT2Eeao6LAbRG4SEA
Element-Name: ReportRequestDialog
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _BDwk0L_REeeZjPvKldpoFQ
Runtime-Version: 2.2.0.201606232320
Save-Time: 11/20/17 3:45 PM
Testcase-Type: ecl

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Tests the ReportRequestDialog that is used to create and optionally run a new Code Coverage report.
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

log "---------------------------------------------- ReportRequestDialog ----------------------------------------------"

global [val repository "XDEVREG.CC.REPOSIT2"]
global [val reportName "TestReport1"]
global [val reportNode [format "Report Requests/%s" $reportName]]
global [val filterName "test"]
global [val firstMask "mask1"]
global [val secondMask "mask2"]

proc "report-request-cleanup"
{
	delete-filter -filterName $filterName
	delete-report -reportName $reportName
	remove-cc-repository -repositoryName $repository -hostName $HOST -portNum $PORT
}

get-menu -path "Compuware/Code Coverage" | click

report-request-cleanup

add-cc-repository -repositoryName $repository -hostName $HOST -portNum $PORT -filter "XDEVREG.**.REPOSIT*"

get-menu -path "Compuware/Code Coverage" | click

get-view "Code Coverage" | get-tree | select "Report Requests" | get-menu -path "New..." | click

// Run and OK buttons should be disabled by default
with [get-window "Code Coverage Report Request"]
{
    get-button Run | get-property enablement | equals false | verify-true
    get-button OK | get-property enablement | equals false | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}

// Test field errors and button enablement
get-window "Code Coverage Report Request" | get-editbox -after [get-label "Report request name:"] | set-text $reportName
get-window "Code Coverage Report Request" | get-combo -after [get-label "Host:"] | select [format "%s:%s" $HOST $PORT]

    
get-window "Code Coverage Report Request" | get-editbox -after [get-label "System:"] | set-text CW01
with [get-window "Code Coverage Report Request"]
{
    get-button Run | get-property enablement | equals true | verify-true
    get-button OK | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}
with [get-window "Code Coverage Report Request" | get-editbox -after [get-label "Report request name:"]]
{
    set-text "TestReport*1"
}
get-window "Code Coverage Report Request" | get-editbox -after [get-label "Code Coverage Report Request"] | get-property text | equals "'*' is an invalid character in a report name." | verify-true
get-window "Code Coverage Report Request" | get-editbox -after [get-label "Report request name:"] | set-text $reportName
get-window "Code Coverage Report Request" | get-combo -after [get-label "Host:"] | select [format "%s:%s" $HOST $PORT]

// all buttons should now be enabled
with [get-window "Code Coverage Report Request"]
{
    get-button Run | get-property enablement | equals true | verify-true
    get-button OK | get-property enablement | equals true | verify-true
    get-button Cancel | get-property enablement | equals true | verify-true
}

//filters
get-window "Code Coverage Report Request" | get-tab-folder | get-tab-item Filters | click

with [get-window "Code Coverage Report Request"]
{
	get-button "New..." | click
    with [get-window "Code Coverage Filter"]
    {
        get-editbox -after [get-label "Name:"] | set-text $filterName
        get-button "Add..." | click
        with [get-window "Code Coverage Filter Criteria"]
        {
            get-group Masking | get-editbox -after [get-label "Begin mask:"] | set-text $firstMask
            get-button OK | click
        }
        get-button OK | click
    }
    
    get-window "Code Coverage Report Request" | get-table -after [get-label "Filter criteria:"] | get-property itemCount | equals 1 | verify-true

    get-table | get-item $filterName | get-property checked | equals true | verify-true
    with [get-table -after [get-label "Filter criteria:"]]
    {
	    get-item Critical | get-property "values['Start']" | equals "" | verify-true
	    get-item Critical | get-property "values['End Mask']" | equals "" | verify-true
	    get-item Critical | get-property "values['Begin Mask']" | equals $firstMask | verify-true
	    get-item Critical | get-property "values['End']" | equals "" | verify-true
	    get-item Critical | get-property "values['Scope']" | equals Line | verify-true
	    get-item Critical | get-property "values['Type']" | equals Critical | verify-true
	    get-item Critical | get-property "values['Match']" | equals Any | verify-true
    }
    
    get-button "Edit..." | click
    with [get-window "Code Coverage Filter"]
    {
        get-editbox -after [get-label "Name:"] | click-text 5
        get-button "Add..." | click
        with [get-window "Code Coverage Filter Criteria"]
        {
            get-group Masking | get-editbox -after [get-label "Begin mask:"] | set-text $secondMask
            get-button OK | click
        }
        get-button OK | click
    }
    
    with [get-table -after [get-label "Filter criteria:"]]
    {
	    get-item Critical -index 1 | get-property "values['Start']" | equals "" | verify-true
	    get-item Critical -index 1 | get-property "values['End Mask']" | equals "" | verify-true
	    get-item Critical -index 1 | get-property "values['Begin Mask']" | equals $secondMask | verify-true
	    get-item Critical -index 1 | get-property "values['End']" | equals "" | verify-true
	    get-item Critical -index 1 | get-property "values['Scope']" | equals Line | verify-true
	    get-item Critical -index 1 | get-property "values['Type']" | equals Critical | verify-true
	    get-item Critical -index 1 | get-property "values['Match']" | equals Any | verify-true
    }
    
    get-window "Code Coverage Report Request" | get-table -after [get-label "Filter criteria:"] | get-property itemCount | equals 2 | verify-true
    with [get-window "Code Coverage Report Request" | get-table -after [get-label "Filters:"]]
    {
	    select $filterName
	    get-item $filterName | uncheck
    }
    get-window "Code Coverage Report Request" | get-table -after [get-label "Filter criteria:"] | get-property itemCount | equals 0 | verify-true
}

// Merge Debug should be unchecked by default
get-window "Code Coverage Report Request" | get-tab-folder | get-tab-item Options | click
with [get-window "Code Coverage Report Request" | get-button "Combine altered debug sessions with unaltered sessions"]
{
    get-property caption | equals "Combine altered debug sessions with unaltered sessions" | verify-true
    get-property selected | equals false | verify-true
    check
}

get-window "Code Coverage Report Request" | get-button OK | click

// Verify report was saved

// TODO: When edit action is complete, verify saved report data view edit action

get-view "Code Coverage" | get-tree | select $reportNode | get-menu -path Delete | click
get-window "Code Coverage" | get-button Yes | click

// Create and run a report
get-view "Code Coverage" | get-tree | select "Report Requests" | get-menu -path "New..." | click
with [get-window "Code Coverage Report Request"]
{
    get-editbox -after [get-label "Report request name:"] | set-text $reportName
    get-combo -after [get-label "Repository:"] | set-text $repository
    get-combo -after [get-label "Summary level:"] | select Programs
    get-editbox -after [get-label "System:"] | set-text ""
    get-button Run | click
}

get-view $reportName | get-tree | get-item -path "COMPFLDS \\(2017-05-23 09:16:05\\)" | get-property caption | equals "COMPFLDS (2017-05-23 09:16:05)" | verify-true
get-view "Code Coverage" | click
get-view $reportName | close
get-view "Code Coverage" | get-tree | select $reportNode | get-menu -path Delete | click
get-window "Code Coverage" | get-button Yes | click
get-view "Code Coverage" | get-tree

report-request-cleanup
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
