--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _UrIe0ER7EeamKrg04Gqe-Q,_eEaF4ER8EeamKrg04Gqe-Q,_urTgQEU4EeamKrg04Gqe-Q,_ktRQQER8EeamKrg04Gqe-Q,_YuwFQER7EeamKrg04Gqe-Q,_PprFMER9EeamKrg04Gqe-Q,_l8_BIER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q,_EfZegOPFEeam-YDlsFNHqg,_MYNJMMAAEeeHssnVEiHSeA
Element-Name: CodeCoveragePreferences
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _KtuB8OPFEeam-YDlsFNHqg
Runtime-Version: 2.1.0.201606221726
Save-Time: 11/20/17 11:37 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val codeCoverageRepository "XDEVREG.CC.REPOSIT"]
global [val codeCoverageDdio "XDEVREG.CC.DDIO"]
global [val codeCoverageReport1 "XDEVREG_CC_REPORT1"]
global [val codeCoverageFilter1 "XDEVREG_CC_FILTER1"]
global [val exportLocation [concat [get-workspace-location]"/CodeCoverageImportExportProject/export"]]
global [val pgmTimestamp "2017-05-01 13:48:49"]

log "---------------------------------------------- CodeCoveragePreferences ----------------------------------------------"

// Delete any previously exported code coverage preference files
try -command
{
    delete-file [uri-from-path $exportLocation]
}
-catch
{
    concat "Could not delete folder " $exportLocation | log
}

// Add Code Coverage Preferences

get-preferences-menu | click
with [get-window Preferences] {
    get-tree | select "Compuware/Code Coverage"
    get-button "Add..." | click
    with [get-window Datasets] {
        get-editbox | set-text "XDEVREG.XPED.DDIO"
        get-button OK | click
    }

    get-tree | select "Compuware/Code Coverage"
    get-group "Open the associated perspective when a Code Coverage report runs" | get-button Always | click
    get-group Perspectives | get-combo -after [get-label "Perspective:"] | select "Code Coverage"

    get-button OK | click
}

open-perspective "Code Coverage"

// Add repository
get-view "Code Coverage" | get-tree | select Repositories | get-menu "Add..." | click
with [get-window "Code Coverage"] {
    with [get-section Repositories] {
        with [get-editbox -after [get-label "Name:"]] {
            set-text "XDEVREG.CC.REPOSIT"
        }
        get-button List | click
        get-table | select "XDEVREG.CC.REPOSIT"
    }
    get-button OK | click
}

// Create a report
get-view "Code Coverage" | get-button "Create a New Report Request" | click
with [get-window "Code Coverage Report Request"] 
{
    get-editbox -after [get-label "Report request name:"] | set-text $codeCoverageReport1
    get-tab-item Criteria | click
    get-button "Specify a list" | click
    get-combo -after [get-label "Type:"] | select Programs
    get-table | get-item $pgmTimestamp -column "Compile Date\/Time" | check
    get-button Run | click
}

get-view "Code Coverage" | get-tree | select [format "Report Requests/%s" $codeCoverageReport1] | get-menu "Edit..." | click
with [get-window "Code Coverage Report Request"] {
    get-editbox -after [get-label "Report request name:"] | set-text $codeCoverageReport1
    get-tab-item Criteria | click
    get-button "Specify names" | click
    get-editbox -after [get-label "Program:"] | set-text CWXTCOB
    
    get-tab-folder | get-tab-item Filters | click
    
    get-button "New..." | click
    with [get-window "Code Coverage Filter"] {
        with [get-editbox -after [get-label "Name:"]] {
            click-text
            set-text $codeCoverageFilter1
        }
        get-button "Add..." | click
        with [get-window "Code Coverage Filter Criteria"] {
            get-button OK | click
            get-group Masking | get-editbox -after [get-label "Begin mask:"] | set-text PERFORM
            get-button OK | click
        }
        get-button OK | click
    }
    
    get-button OK | click
}

// Change selected column display

get-view $codeCoverageReport1 | click
get-button "View Menu" | click
get-view $codeCoverageReport1 | get-menu "Select Columns..." | click
with [get-window "Select Columns"] {
    get-list 
        | select Branches "Branches Executed" "Critical Branches" "Critical Branches Executed" "Critical Verbs" "Critical Verbs Executed" "Excluded Branch %" "Excluded Branches" "Excluded Branches Executed" "Excluded Verb %" "Excluded Verbs" "Excluded Verbs Executed" "Net Branch %" "Net Branches" "Net Branches Executed" "Net Verb %" "Net Verbs" "Net Verbs Executed" Verbs "Verbs Executed"
    get-button "Add >" | click
    get-list -after [get-label "Show these columns in this order:"] -index 1 
        | select Branches "Branches Executed" "Critical Branches" "Critical Branches Executed" "Critical Verbs" "Critical Verbs Executed" "Excluded Branch %" "Excluded Branches" "Excluded Branches Executed" "Excluded Verb %" "Excluded Verbs" "Excluded Verbs Executed" "Net Branch %" "Net Branches" "Net Branches Executed" "Net Verb %" "Net Verbs" "Net Verbs Executed" Verbs "Verbs Executed"
    get-button OK | click
}
get-view "Code Coverage" | click
get-button "View Menu" -index 1 | click
get-view "Code Coverage" | get-tree | select "Report Requests/XDEVREG_CC_REPORT1/XDEVREG_CC_FILTER1"
get-view $codeCoverageReport1 | click
get-view $codeCoverageReport1 | get-tree | select [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp]
    | get-menu "View Printer-Friendly Annotated Listing..." | click
get-window "Printer-Friendly Annotated Listing Options" | get-button OK | click

// Export Code Coverage settings

get-menu "File/Export..." | click
with [get-window Export] {
    get-tree | select "Compuware/Compuware Configuration Settings"
    get-button "Next >" | click
}
with [get-window "Export Compuware Configuration Settings" | get-group "Configuration Settings" | get-tree] {
    select "Code Coverage"
    get-item "Code Coverage" | check
}
set-dialog-result Folder $exportLocation
with [get-window "Export Compuware Configuration Settings"] {
    get-button "Browse..." | click
    get-button Finish | click
    get-window "Import/Export" | get-button OK | click
}

// Clean up existing code coverage artifacts and reset/remove preferences

get-view $codeCoverageReport1 | click
get-editor "CWXTCOB (2017-05-01 134849).txt" | close
get-view "Code Coverage" | click
get-view $codeCoverageReport1 | close
get-view "Code Coverage" | get-tree | select "Report Filters/XDEVREG_CC_FILTER1" | get-menu Delete | click
with [get-window "Code Coverage"] {
    with [get-editbox] {
        set-focus
        key-type "TRAVERSE_TAB_NEXT"
    }
    get-button Yes | click
}
get-view "Code Coverage" | get-tree | select "Report Requests/XDEVREG_CC_REPORT1" | get-menu Delete | click
get-window "Code Coverage" | get-button Yes | click
get-preferences-menu | click
with [get-window Preferences] {
    get-tree | select "Compuware/Code Coverage"
    get-table | select "XDEVREG.XPED.DDIO"
    get-button Remove | click
    get-button OK | click
}

// Import the code coverage preferences that we exported.

get-menu "File/Import..." | click
with [get-window Import] {
    get-tree | select "Compuware/Compuware Configuration Settings"
    get-button "Next >" | click
}
set-dialog-result Folder "platform:/resource/CodeCoverageImportExportProject/export/Code Coverage Settings"
with [get-window "Import Compuware Configuration Settings"] {
    get-button "Browse..." | click
    with [get-group "Configuration Settings" | get-tree] {
        select "Code Coverage"
        get-item "Code Coverage" | check
    }
    get-button Finish | click
    get-window "Import/Export Error" | get-button OK | click
}
set-dialog-result Folder "platform:/resource/CodeCoverageImportExportProject/export"
with [get-window "Import Compuware Configuration Settings"] {
    get-button "Browse..." | click
    with [get-group "Configuration Settings" | get-tree] {
        get-item "Code Coverage" | uncheck
        get-item "Code Coverage" | check
    }
    get-button Finish | click
    get-window "Import/Export" | get-button OK | click
}
with [get-view "Code Coverage" | get-tree] {
    get-item "Report Requests/XDEVREG_CC_REPORT1" | get-property caption | equals $codeCoverageReport1 | verify-true
    get-item "Report Filters/XDEVREG_CC_FILTER1" | get-property caption | equals $codeCoverageFilter1 | verify-true
}

// Verify imported report and print option preferences

get-view "Code Coverage" | get-tree | select "Report Requests/XDEVREG_CC_REPORT1" | get-menu Run | click
get-report-view -reportName $codeCoverageReport1 | get-tree | select [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB (%s)" $pgmTimestamp] 
    | get-menu "View Printer-Friendly Annotated Listing..." | click
with [get-window "Printer-Friendly Annotated Listing Options" | get-group "Print Options"] {
    with [get-button "Include highlighting"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
    with [get-button "Include program information"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
    with [get-button "Include annotations legend"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
    with [get-button "Include statement numbers"] {
        get-property enablement | equals true | verify-true
        get-property selected | equals true | verify-true
    }
}
get-window "Printer-Friendly Annotated Listing Options" | get-button Cancel | click

// Validate column display preferences

with [get-report-view -reportName $codeCoverageReport1 | get-tree] {
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[0].getText()" | equals Name 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[1].getText()" | equals Risk 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[2].getText()" 
        | equals "Critical Verb %" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[3].getText()" | equals "Verb %" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[4].getText()" 
        | equals "Critical Branch %" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[5].getText()" | equals "Branch %" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[6].getText()" | equals Branches 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[7].getText()" 
        | equals "Branches Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[8].getText()" 
        | equals "Critical Branches" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[9].getText()" 
        | equals "Critical Branches Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[10].getText()" 
        | equals "Critical Verbs" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[11].getText()" 
        | equals "Critical Verbs Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[12].getText()" 
        | equals "Excluded Branch %" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[13].getText()" 
        | equals "Excluded Branches" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[14].getText()" 
        | equals "Excluded Branches Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[15].getText()" 
        | equals "Excluded Verb %" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[16].getText()" 
        | equals "Excluded Verbs" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[17].getText()" 
        | equals "Excluded Verbs Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[18].getText()" | equals "Net Branch %" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[19].getText()" | equals "Net Branches" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[20].getText()" 
        | equals "Net Branches Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[21].getText()" | equals "Net Verb %" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[22].getText()" | equals "Net Verbs" 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[23].getText()" 
        | equals "Net Verbs Executed" | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[24].getText()" | equals Verbs 
        | verify-true
    get-item "System: SYSA" | get-property "getParent().getColumns().TreeColumn[25].getText()" 
        | equals "Verbs Executed" | verify-true
}

// Verify DDIO file preferences

get-preferences-menu | click
get-window Preferences | get-tree | select "Compuware/Code Coverage"
with [get-window Preferences | get-table] {
    get-item "XDEVREG.XPED.DDIO" | get-property caption | equals "XDEVREG.XPED.DDIO" | verify-true
    get-item "XDEVREG.XPED.DDIO" | get-property checked | equals true | verify-true
}

// The perspective preferences are temporarily located under Compuware/Code Coverage Report - this will change when 
// repository preferences are removed and preference pages are merged together.
with [get-window Preferences] {
    get-tree | select "Compuware/Code Coverage"
    with [get-group "Open the associated perspective when a Code Coverage report runs"] {
        get-property "getChildren().Control[0].getText()" | equals "&Always" | verify-true
        get-property "getChildren().Control[0].getSelection()" | equals true | verify-true
    }
    get-group Perspectives | get-combo -after [get-label "Perspective:"] | get-property selection 
        | equals "Code Coverage" | verify-true
}

// Clean up preference settings and code coverage reports/filters

with [get-window Preferences] {
    get-tree | select "Compuware/Code Coverage"
    get-table | select "XDEVREG.XPED.DDIO"
    get-button Remove | click
    get-button OK | click
}
get-view "Code Coverage" | click

get-view "Code Coverage" | get-tree | select "Repositories/cw01:30947/XDEVREG.CC.REPOSIT" | get-menu Remove | click
get-window "Remove Repository" | get-button Yes | click

get-report-view -reportName $codeCoverageReport1 | close
get-view "Code Coverage" | get-tree | select "Report Filters/XDEVREG_CC_FILTER1" | get-menu Delete | click
with [get-window "Code Coverage"] {
    with [get-editbox] {
        set-focus
        key-type "TRAVERSE_TAB_NEXT"
    }
    get-button Yes | click
}
get-view "Code Coverage" | get-tree | select "Report Requests/XDEVREG_CC_REPORT1" | get-menu Delete | click
get-window "Code Coverage" | get-button Yes | click
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
