--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _UrIe0ER7EeamKrg04Gqe-Q,_YuwFQER7EeamKrg04Gqe-Q,_eEaF4ER8EeamKrg04Gqe-Q,_ktRQQER8EeamKrg04Gqe-Q,_urTgQEU4EeamKrg04Gqe-Q,_PprFMER9EeamKrg04Gqe-Q,_l8_BIER7EeamKrg04Gqe-Q,_kRuZMER7EeamKrg04Gqe-Q
Element-Name: EndToEnd
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _z-wEIMbPEeaPHKVWbry8Pw
Runtime-Version: 2.2.0.201705230341
Save-Time: 11/28/17 11:39 AM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

global [val codeCoverageRepository "XDEVREG.CC.REPOSIT"]
global [val codeCoverageReport1 "XDEVREG_CC_REPORT1"]
global [val codeCoverageReport2 "XDEVREG_CC_REPORT2"]
global [val codeCoverageFilter1 "XDEVREG_CC_FILTER1"]
global [val pgmTimestamp "2017-05-01 13:48:49"]

add-filter -filter $FILTER_XDEVREG

open-perspective "Code Coverage"

// Remove all repositories for all defined z/OS hosts
invoke-static -pluginId "com.compuware.codecoverage.rcptt" -className "com.compuware.codecoverage.rcptt.CodeCoverageTestUtilities" -methodName "removeAllRepositories"

add-cc-repository -repositoryName $codeCoverageRepository


// Clean up left over report(s) and filter(s) if present.
delete-report $codeCoverageReport1
delete-report $codeCoverageReport2
delete-filter $codeCoverageFilter1


// Make sure all annotation types are reset
get-view Annotations | get-button "Select Annotations..." | click
with [get-window Annotations] 
{
    get-table | get-item Critical | uncheck
    get-button OK | click
}

// Test simple report creation
get-view "Code Coverage" | get-button "Create a New Report Request" | click
with [get-window "Code Coverage Report Request"] 
{
    get-editbox -after [get-label "Report request name:"] | set-text $codeCoverageReport1
    get-combo -after [get-label "Host:"] | select [format "%s:%s" $HOST $PORT]
    get-button "Specify a list" | click
    get-combo -after [get-label "Type:"] | select Programs
    get-table | get-item $pgmTimestamp -column "Compile Date\/Time" | check
    get-button "Run" | click
}

//get-window "Code Coverage" | get-button Yes | click

get-tab-folder | get-property activePage | equals $codeCoverageReport1 | verify-true
get-report-view $codeCoverageReport1 | get-tree | get-item "System: SYSA" | get-property "getText()" | equals "System: SYSA" 
    | verify-true
    
// Test annotations
get-report-view $codeCoverageReport1 | get-tree | select "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(.*\\)" | double-click
with [get-view Annotations] {
	with [get-tree] {
		select "Unexecuted \\(60 items\\)" | double-click
    get-item ".*/491" -column "Line" | get-property caption | equals Unexecuted | verify-true
    	select [get-item  ".*/491" -column "Line"] | double-click
    }

	get-editor "CWXTCOB (.*)" | get-text-viewer | get-property "getSelectionText()" | contains "MOVE 'Y' TO REGION-ERROR-SW." | verify-true

	with [get-tree] {
		select "Executed \\(133 items\\)" | double-click
    	get-item ".*/346" -column "Line" | get-property caption | equals Executed | verify-true
    	select [get-item ".*/346" -column "Line"] | double-click
    }

	get-editor "CWXTCOB (.*)" | get-text-viewer | get-property "getSelectionText()" | contains "PERFORM 9000-OPEN." | verify-true
}

get-report-view $codeCoverageReport1 |close

// Test report with filters creation
get-view "Code Coverage" | get-tree | select [format "Report Requests/%s" $codeCoverageReport1] | get-menu "Edit..." | click
with [get-window "Code Coverage Report Request"] {
    get-editbox -after [get-label "Report request name:"] | set-text $codeCoverageReport1
    get-button "Specify names" | click
    get-editbox -after [get-label "Program:"] | set-text CWXTCOB
    
    get-tab-folder | get-tab-item Filters | click
    get-button "New..." | click
    with [get-window "Code Coverage Filter"] {
        with [get-editbox -after [get-label "Name:"]] {
            click-text
            set-text $codeCoverageFilter1
        }
        get-button "Add..." | click
        with [get-window "Code Coverage Filter Criteria"] {
            get-button OK | click
            get-group Masking | get-editbox -after [get-label "Begin mask:"] | set-text PERFORM
            get-button OK | click
        }
        get-button OK | click
    }
    
    get-button Run | click
}

try -command
{
	get-window "Code Coverage" | get-button Yes | click
	with [get-window "Code Coverage"] {
	    with [get-editbox] {
	        set-focus
	        key-type "TRAVERSE_TAB_NEXT"
	    }
	    get-button Yes | click
	}
}
-catch
{
}


get-report-view $codeCoverageReport1 | get-tree | select [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] | double-click

with [get-view Annotations] {
	with [get-tree] {
		select "Executed \\(133 items\\)" | double-click
    	get-item ".*/403" -column "Line" | get-property caption | equals Executed | verify-true
    	select [get-item ".*/403" -column "Line"] | double-click
    }
	
	get-editor "CWXTCOB (.*)" | get-text-viewer | get-property "getSelectionText()" | contains "PERFORM" | verify-true
}

// Test Select Annotations... action
with [get-view Annotations] {
    get-button "Select Annotations..." | click
}

with [get-window Annotations] {
    get-table | get-item Critical | check
    get-button OK | click
}

with [get-view Annotations 
    | get-label "CWXTCOB \\(.*\\).cbl   Filter matched 24 of 193 items using criteria: Match any: Critical"] {
    get-property caption 
        | equals "CWXTCOB \\(.*\\).cbl   Filter matched 24 of 193 items using criteria: Match any: Critical" 
        | verify-true
}

get-view Annotations | get-tree | select [get-item ".*/358" -column "Line"] | double-click

with [get-view Annotations] {
	with [get-tree] {
	get-editor "CWXTCOB (.*)" | get-text-viewer | get-property "getSelectionText()" | contains "PERFORM 7000-PRINT-REGION-REPORT" | verify-true
	}
}

close-all-editors
get-report-view $codeCoverageReport1 | close

// Test Duplicate the Selected Item action
with [get-view "Code Coverage"] {
    get-tree | select [format "Report Requests/%s" $codeCoverageReport1]
    get-button "Duplicate the Selected Item" | click
}

with [get-window "Code Coverage Report Request"] {
	get-editbox -after [get-label "Report request name:"] | set-text $codeCoverageReport2
    get-button Run | click
}

get-report-view $codeCoverageReport2 | get-tree | select "System: SYSA"
with [get-report-view $codeCoverageReport2 | get-tree] {
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] | get-property "values['Name']" 
        | equals [format "CWXTCOB (%s)" $pgmTimestamp] | verify-true
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] 
        | get-property "values['Critical Verb %']" | equals "83%" | verify-true
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] | get-property "values['Branch %']" 
        | equals "" | verify-true
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] | get-property "values['Verb %']" 
        | equals "68%" | verify-true
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] 
        | get-property "values['Critical Branch %']" | equals "" | verify-true
    get-item [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB \\(%s\\)" $pgmTimestamp] | get-property "values['Risk']" 
        | equals 867 | verify-true
}

// Test View Printer-Friendly Annotation Listing action
get-view [format "%s.*" $codeCoverageReport2] | get-tree 
    | select [format "System: SYSA/Load Module: CWXTCOB/CWXTCOB (%s)" $pgmTimestamp]
    | get-menu "View Printer-Friendly Annotated Listing..." | click
get-window "Printer-Friendly Annotated Listing Options" | get-button OK | click

get-tab-folder -index 2 | get-property activePage | equals "CWXTCOB (2017-05-01 134849).txt" | verify-true

get-editor "CWXTCOB (2017-05-01 134849).txt" | get-text-viewer | get-property text 
    | contains "Program:            CWXTCOB\n"
    + "System:             SYSA\n"
    + "Load Module:        CWXTCOB\n"
    + "Language:           COBOL\n"
    + "Debug:              No\n"
    + "Optimized:          No\n"
    + "Repositories:       XDEVREG.CC.REPOSIT\n\n"
    + "Annotations:\n"
    + "E = Executed        B0 = Conditional is not executed\n"
    + "U = Unexecuted      B1 = First path executed\n"
    + "! = Critical        B2 = Second path executed\n"
    + "X = Excluded        B3 = Both paths executed\n"
    + "* = Optimized       B4 = No paths executed\n\n"
    + "  1             IDENTIFICATION DIVISION.\n"
    + "  2             PROGRAM-ID.       CWXTCOB.\n" | verify-true

with [get-view "Code Coverage" | get-tree] {
    select [format "Report Requests/%s" $codeCoverageReport1] [format "Report Requests/%s" $codeCoverageReport2]
    get-menu Delete | click
}    
get-window "Code Coverage" | get-button Yes | click

get-view "Code Coverage" | get-tree | select [format "Report Filters/%s" $codeCoverageFilter1] | get-menu Delete | click
get-window "Code Coverage" | get-button Yes | click

// Reset annotations filter
get-view Annotations | get-button "Select Annotations..." | click
with [get-window Annotations] 
{
    get-table | get-item Critical | uncheck
    get-button OK | click
}

close-all-editors
get-report-view $codeCoverageReport2 | close

// Test Cheat Sheets

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
